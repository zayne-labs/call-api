// == These two types allows for adding arbitrary literal types, while still provided autocomplete for defaults.
// == Usually intersection with "{}" or "NonNullable<unknown>" would make it work fine, but the placeholder with never type is added to make the AnyWhatever type appear last in a given union.
export type AnyString = string & { placeholder?: never };
export type AnyNumber = number & { placeholder?: never };

/* eslint-disable ts-eslint/no-explicit-any */
// == `Any` is required here so that one can pass custom function type without type errors
export type AnyFunction<TResult = any> = (...args: any[]) => TResult;

export type Prettify<TObject> = NonNullable<unknown> & { [Key in keyof TObject]: TObject[Key] };

// == Using this Immediately Indexed Mapped type helper to help show computed type of anything passed to it instead of just the type name
export type UnmaskType<TValue> = { _: TValue }["_"];

export type Awaitable<TValue> = UnmaskType<Promise<TValue> | TValue>;

export type CommonRequestHeaders =
	| "Access-Control-Allow-Credentials"
	| "Access-Control-Allow-Headers"
	| "Access-Control-Allow-Methods"
	| "Access-Control-Allow-Origin"
	| "Access-Control-Expose-Headers"
	| "Access-Control-Max-Age"
	| "Age"
	| "Allow"
	| "Cache-Control"
	| "Clear-Site-Data"
	| "Content-Disposition"
	| "Content-Encoding"
	| "Content-Language"
	| "Content-Length"
	| "Content-Location"
	| "Content-Range"
	| "Content-Security-Policy-Report-Only"
	| "Content-Security-Policy"
	| "Cookie"
	| "Cross-Origin-Embedder-Policy"
	| "Cross-Origin-Opener-Policy"
	| "Cross-Origin-Resource-Policy"
	| "Date"
	| "ETag"
	| "Expires"
	| "Last-Modified"
	| "Location"
	| "Permissions-Policy"
	| "Pragma"
	| "Retry-After"
	| "Save-Data"
	| "Sec-CH-Prefers-Color-Scheme"
	| "Sec-CH-Prefers-Reduced-Motion"
	| "Sec-CH-UA-Arch"
	| "Sec-CH-UA-Bitness"
	| "Sec-CH-UA-Form-Factor"
	| "Sec-CH-UA-Full-Version-List"
	| "Sec-CH-UA-Full-Version"
	| "Sec-CH-UA-Mobile"
	| "Sec-CH-UA-Model"
	| "Sec-CH-UA-Platform-Version"
	| "Sec-CH-UA-Platform"
	| "Sec-CH-UA-WoW64"
	| "Sec-CH-UA"
	| "Sec-Fetch-Dest"
	| "Sec-Fetch-Mode"
	| "Sec-Fetch-Site"
	| "Sec-Fetch-User"
	| "Sec-GPC"
	| "Server-Timing"
	| "Server"
	| "Service-Worker-Navigation-Preload"
	| "Set-Cookie"
	| "Strict-Transport-Security"
	| "Timing-Allow-Origin"
	| "Trailer"
	| "Transfer-Encoding"
	| "Upgrade"
	| "Vary"
	| "Warning"
	| "WWW-Authenticate"
	| "X-Content-Type-Options"
	| "X-DNS-Prefetch-Control"
	| "X-Frame-Options"
	| "X-Permitted-Cross-Domain-Policies"
	| "X-Powered-By"
	| "X-Robots-Tag"
	| "X-XSS-Protection";

export type CommonContentTypes =
	| "application/epub+zip"
	| "application/gzip"
	| "application/json"
	| "application/ld+json"
	| "application/octet-stream"
	| "application/ogg"
	| "application/pdf"
	| "application/rtf"
	| "application/vnd.ms-fontobject"
	| "application/wasm"
	| "application/xhtml+xml"
	| "application/xml"
	| "application/zip"
	| "audio/aac"
	| "audio/mpeg"
	| "audio/ogg"
	| "audio/opus"
	| "audio/webm"
	| "audio/x-midi"
	| "font/otf"
	| "font/ttf"
	| "font/woff"
	| "font/woff2"
	| "image/avif"
	| "image/bmp"
	| "image/gif"
	| "image/jpeg"
	| "image/png"
	| "image/svg+xml"
	| "image/tiff"
	| "image/webp"
	| "image/x-icon"
	| "model/gltf-binary"
	| "model/gltf+json"
	| "text/calendar"
	| "text/css"
	| "text/csv"
	| "text/html"
	| "text/javascript"
	| "text/plain"
	| "video/3gpp"
	| "video/3gpp2"
	| "video/av1"
	| "video/mp2t"
	| "video/mp4"
	| "video/mpeg"
	| "video/ogg"
	| "video/webm"
	| "video/x-msvideo";
